version: "3.8"

services:
  mongodb:
    image: mongo:4.4.18
    # restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db
    command: --quiet

  app:
    depends_on:
      - mongodb
    build: ./meow
    # restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    user: "node"
    environment:
      - NODE_ENV=production
      - TZ=America/New_York
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    # stdin_open: true
    # tty: true
    volumes:
      - ./images:/meow/static/images

  purr:
    depends_on:
      - mongodb
    build: 
      context: ./purr
      dockerfile: Dockerfile.yolo.cpu

    restart: unless-stopped
    env_file: ./.env
    # ports:
    #   - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
    # stdin_open: true
    # tty: true
    volumes:
      - ./images:/images


  mosquitto:
    image: eclipse-mosquitto:2
    # network_mode: host
    volumes:
      - ./mosquitto/conf:/mosquitto/config/
      - ./mosquitto/data:/mosquitto/data/
      - ./mosquitto/log:/mosquitto/log/
    ports:
      - "1883:1883"
    restart: unless-stopped

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      # - PUID=1000 #optional use 'id $user'
      # - PGID=1000 #optional
      - TZ=America/New_York
      - SUBDOMAINS=meow-purr
      - TOKEN=2d153240-ca4e-453a-af1c-9fcb17fb1516
      - LOG_FILE=false #optional
    volumes:
      - ./duckdns/config:/config #optional
    restart: unless-stopped

  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

# pip install -r requirements.txt

# this creates the database files in the project directory
volumes:
  db:
    driver: local
    driver_opts:
      type: none
      device: "./data"
      o: bind
  db2:
    driver: local
    driver_opts:
      type: none
      device: "./data"
      o: bind

  images:
    driver: local
    driver_opts:
      type: none
      device: "./images"
      o: bind

# use this instead if you want the volume in the default location
# volumes:
#   db:
#   images: